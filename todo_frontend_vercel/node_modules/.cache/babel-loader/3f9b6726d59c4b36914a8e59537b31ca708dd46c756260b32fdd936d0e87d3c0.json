{"ast":null,"code":"var _jsxFileName = \"D:\\\\INTERNSHIP at Job Hobe\\\\Official_works\\\\todo_react_app_vercel\\\\todo_react_vercel\\\\todo_frontend_vercel\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction InputCompnent({\n  onChangeTrigger,\n  inputValue,\n  elementType,\n  className,\n  placeholder\n}) {\n  if (elementType === 'elementInput') {\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: onChangeTrigger,\n      value: inputValue,\n      className: className,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 14\n    }, this);\n  } else if (elementType === 'elementTextArea') {\n    return /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: onChangeTrigger,\n      value: inputValue,\n      className: className,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 14\n    }, this);\n  }\n}\n_c = InputCompnent;\nfunction MapedComponents({\n  todoList,\n  inputType,\n  triggers\n}) {\n  const tasksList = todoList.filter(task => task.inputType === inputType);\n  return tasksList.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-item\",\n    children: [/*#__PURE__*/_jsxDEV(VisualizedNotes, {\n      keyValue: task.id,\n      noteValue: task.task,\n      onClickTriger: () => triggers[0](task.id),\n      className: 'note-item-content'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n      onClickTriger: () => triggers[1](task.id),\n      className: 'btn-delete'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this));\n}\n_c2 = MapedComponents;\nfunction VisualizedNotes({\n  keyValue,\n  noteValue,\n  onClickTriger,\n  className\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: onClickTriger,\n    className: className,\n    children: noteValue\n  }, keyValue, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c3 = VisualizedNotes;\nfunction Buttons({\n  onClickTriger,\n  className,\n  btnTitle\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClickTriger,\n    className: className,\n    children: btnTitle\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_c4 = Buttons;\nfunction DeleteButton({\n  onClickTriger,\n  className\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: onClickTriger,\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      fill: \"none\",\n      viewBox: \"0 0 24 24\",\n      \"stroke-width\": \"1.5\",\n      stroke: \"currentColor\",\n      class: \"size-4 lg:size-5\",\n      children: /*#__PURE__*/_jsxDEV(\"path\", {\n        \"stroke-linecap\": \"round\",\n        \"stroke-linejoin\": \"round\",\n        d: \"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107  1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456  0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5  0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667  48.667 0 0 0-7.5 0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n_c5 = DeleteButton;\nfunction App() {\n  _s();\n  const [newInput, setnewInput] = useState(\"\");\n  const [todoList, setTodoList] = useState([]);\n  const [editTaskId, setEditTaskId] = useState(null);\n  const [inputType, setinputType] = useState(\"elementInput\");\n  useEffect(() => {\n    fetch('http://localhost:5000/todos').then(response => response.json()).then(data => setTodoList(data)).catch(error => console.error('Error fetching todos:', error));\n  }, []);\n  const addTodo = () => {\n    if (!newInput.trim()) {\n      return;\n    }\n    const newValue = {\n      task: newInput,\n      inputType: inputType\n    };\n    if (editTaskId) {\n      fetch(`http://localhost:5000/todos/${editTaskId}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newValue)\n      }).then(response => response.json()).then(updatedTodo => {\n        const updatedTodos = todoList.map(t => t.id === editTaskId ? updatedTodo : t);\n        setTodoList(updatedTodos);\n        setnewInput('');\n        setEditTaskId(null);\n      }).catch(error => console.error('Error updating todo:', error));\n    } else {\n      fetch('http://localhost:5000/todos', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newValue)\n      }).then(response => response.json()).then(newTodo => {\n        setTodoList([...todoList, newTodo]);\n        setnewInput('');\n      }).catch(error => console.error('Error adding todo:', error));\n    }\n  };\n  function visualizeToUpdate(id) {\n    fetch(`http://localhost:5000/todos/${id}`).then(response => response.json()).then(data => setnewInput(data.task)).then(setEditTaskId(id)).catch(error => console.error('Error fetching todos:', error));\n  }\n  function deleteTodo(id) {\n    fetch(`http://localhost:5000/todos/${id}`, {\n      method: 'DELETE'\n    }).then(() => {\n      const updatedTodos = todoList.filter(task => task.id !== id);\n      setTodoList(updatedTodos);\n      setnewInput(\"\");\n      setEditTaskId(null);\n    }).catch(error => console.error('Error deleting todo:', error));\n  }\n  function currentTodo(e) {\n    setnewInput(e.target.value);\n  }\n  function handleTabs(typeOfInput) {\n    setinputType(typeOfInput);\n    setnewInput(\"\");\n    setEditTaskId(null);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notepad-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: \"Google Keep\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(InputCompnent, {\n            onChangeTrigger: currentTodo,\n            inputValue: newInput,\n            elementType: inputType,\n            className: inputType,\n            placeholder: 'Add your task..'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Buttons, {\n            onClickTriger: addTodo,\n            className: 'btn-save',\n            btnTitle: 'Save'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabs('elementInput'),\n          id: \"btn-task\",\n          className: `'btn-tasks' ${inputType === 'elementInput' ? 'tab-btn-underline' : ''}`,\n          children: \"My Tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleTabs('elementTextArea'),\n          id: \"btn-note\",\n          className: `'btn-notes' ${inputType === 'elementTextArea' ? 'tab-btn-underline' : ''}`,\n          children: \"My Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(MapedComponents, {\n        todoList: todoList,\n        inputType: inputType,\n        triggers: [visualizeToUpdate, deleteTodo]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"yJL8EoisLMPRa6/6DuotcGWLr1M=\");\n_c6 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"InputCompnent\");\n$RefreshReg$(_c2, \"MapedComponents\");\n$RefreshReg$(_c3, \"VisualizedNotes\");\n$RefreshReg$(_c4, \"Buttons\");\n$RefreshReg$(_c5, \"DeleteButton\");\n$RefreshReg$(_c6, \"App\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","InputCompnent","onChangeTrigger","inputValue","elementType","className","placeholder","onChange","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","MapedComponents","todoList","inputType","triggers","tasksList","filter","task","map","children","VisualizedNotes","keyValue","id","noteValue","onClickTriger","DeleteButton","_c2","onClick","_c3","Buttons","btnTitle","_c4","xmlns","fill","viewBox","stroke","class","d","_c5","App","_s","newInput","setnewInput","setTodoList","editTaskId","setEditTaskId","setinputType","fetch","then","response","json","data","catch","error","console","addTodo","trim","newValue","method","headers","body","JSON","stringify","updatedTodo","updatedTodos","t","newTodo","visualizeToUpdate","deleteTodo","currentTodo","e","target","handleTabs","typeOfInput","_c6","$RefreshReg$"],"sources":["D:/INTERNSHIP at Job Hobe/Official_works/todo_react_app_vercel/todo_react_vercel/todo_frontend_vercel/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect  } from 'react';\n\n  function InputCompnent({onChangeTrigger, inputValue, elementType, className, placeholder}){\n\n    if(elementType==='elementInput'){\n      return <input onChange={onChangeTrigger} value={inputValue} className={className} placeholder = {placeholder}></input> \n    }else if(elementType==='elementTextArea'){\n      return <textarea onChange={onChangeTrigger} value={inputValue} className={className} placeholder = {placeholder}></textarea> \n    }\n}\n\n\nfunction MapedComponents({todoList, inputType, triggers}){\n   const tasksList = todoList.filter(task=> task.inputType === inputType);\n\n  return(\n   tasksList.map((task) => (\n    <div  className='note-item'>\n          <VisualizedNotes keyValue = {task.id} noteValue ={task.task} onClickTriger ={()=>triggers[0](task.id)} className = {'note-item-content'} />\n          <DeleteButton onClickTriger={()=> triggers[1](task.id)} className={'btn-delete'} />\n    </div> \n    ))\n  )\n}\n\nfunction VisualizedNotes({keyValue, noteValue, onClickTriger, className}){\n  return(\n    <div key={keyValue}  onClick ={onClickTriger} className={className}>\n        {noteValue} \n    </div>\n  )\n}\n\nfunction Buttons({onClickTriger, className, btnTitle}){\n  return (\n        <button onClick={onClickTriger} className={className}>\n                    {btnTitle}          \n        </button>\n  )\n}\n\nfunction DeleteButton({onClickTriger, className}){\n  return (  \n        <button onClick={onClickTriger}  className= {className}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\" stroke=\"currentColor\" \n           class=\"size-4 lg:size-5\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"m14.74 9-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 \n                1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 0 1-2.244 2.077H8.084a2.25 2.25 0 0 1-2.244-2.077L4.772 5.79m14.456 \n                0a48.108 48.108 0 0 0-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 0 1 3.478-.397m7.5 \n                0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 0 0-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 \n                48.667 0 0 0-7.5 0\" />\n          </svg>\n        </button>\n  )\n}\n\nfunction App() { \n  \n  const[newInput, setnewInput]  = useState(\"\");\n  const[todoList, setTodoList] = useState([]);\n  const[editTaskId, setEditTaskId] = useState(null);\n  const[inputType, setinputType] = useState(\"elementInput\");\n\n    useEffect(() => {\n      fetch('http://localhost:5000/todos')\n        .then(response => response.json())\n        .then(data => setTodoList(data))\n        .catch(error => console.error('Error fetching todos:', error));\n    }, []);\n\n\n    const addTodo = ()=>{ \n\n        if (!newInput.trim()){\n          return\n        }\n\n        const newValue = {\n          task: newInput,\n          inputType: inputType,\n        };\n  \n\n        if (editTaskId){\n              fetch(`http://localhost:5000/todos/${editTaskId}`, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(newValue),\n              })\n                .then(response => response.json())\n                .then(updatedTodo => {\n                  const updatedTodos = todoList.map(t =>\n                    t.id === editTaskId ? updatedTodo : t\n                  );\n                  setTodoList(updatedTodos);\n                  setnewInput('');\n                  setEditTaskId(null);\n                })\n                .catch(error => console.error('Error updating todo:', error));\n        }else{\n\n              fetch('http://localhost:5000/todos', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(newValue),\n              })\n                .then(response => response.json())\n                .then(newTodo => {\n                  setTodoList([...todoList, newTodo]);\n                  setnewInput('');\n                })\n                .catch(error => console.error('Error adding todo:', error));\n        }    \n  }\n\n  function visualizeToUpdate(id){\n      \n       fetch(`http://localhost:5000/todos/${id}`)\n        .then(response => response.json())\n        .then(data => setnewInput(data.task))\n        .then(setEditTaskId(id))\n        .catch(error => console.error('Error fetching todos:', error));\n\n  }\n\n\n  function deleteTodo(id){\n\n        fetch(`http://localhost:5000/todos/${id}`, {\n          method: 'DELETE',\n        })\n          .then(() => {\n            const updatedTodos = todoList.filter(task => task.id !== id);\n            setTodoList(updatedTodos);\n            setnewInput(\"\");\n            setEditTaskId(null);\n          })\n          .catch(error => console.error('Error deleting todo:', error));\n  }\n\n\n  function currentTodo(e){\n        setnewInput(e.target.value);\n  }\n  \n\n  function handleTabs(typeOfInput){\n\n        setinputType(typeOfInput);\n        setnewInput(\"\");\n        setEditTaskId(null);\n\n    }\n\n\n  return (\n    <>\n      <div className='container'>\n\n        <div className='notepad-container'>\n            <div className='title'>\n                  Google Keep\n            </div>\n            <div>\n                <InputCompnent onChangeTrigger={currentTodo} inputValue={newInput}  elementType={inputType} className={inputType} placeholder={'Add your task..'} />\n            </div>\n            <div>\n                <Buttons onClickTriger={addTodo} className={'btn-save'} btnTitle={'Save'}/>\n            </div>\n        </div>\n\n         <div className='tab-buttons'>\n                <button onClick={()=>handleTabs('elementInput')} id=\"btn-task\" \n                    className={`'btn-tasks' ${inputType==='elementInput'? 'tab-btn-underline' : ''}`}>My Tasks</button>\n                <button onClick={()=>handleTabs('elementTextArea')} id=\"btn-note\" \n                    className={`'btn-notes' ${inputType==='elementTextArea'? 'tab-btn-underline' : ''}`}>My Notes</button>\n        </div>\n          <MapedComponents todoList={todoList} inputType={inputType} triggers={[visualizeToUpdate,deleteTodo]}/>\n        </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}